#step-1 activity_main.xml
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <TextView
        android:id="@+id/ip_info_label"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="#1565C0"
        android:text="ESP32 Output Controller"
        android:textColor="#FFFFFF"
        android:textSize="18sp"
        android:gravity="center"
        android:padding="12dp" />

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:gravity="center"
        android:layout_marginTop="16dp">

        <Button
            android:id="@+id/led_on_button"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Turn LED ON" />

        <Button
            android:id="@+id/led_off_button"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Turn LED OFF" />
    </LinearLayout>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center"
        android:layout_marginTop="16dp">

        <Button
            android:id="@+id/set_ip_button"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="0.75"
            android:text="Set IP Address" />
    </LinearLayout>

    <TextView
        android:id="@+id/current_ip_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Current IP:"
        android:layout_gravity="center_horizontal"
        android:layout_marginTop="8dp"
        android:textSize="16sp" />

    <EditText
        android:id="@+id/ip_input"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter IP Address"
        android:layout_marginTop="8dp"
        android:inputType="text"
        android:visibility="gone" />

    <Button
        android:id="@+id/save_ip_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Save IP"
        android:layout_gravity="center_horizontal"
        android:layout_marginTop="8dp"
        android:visibility="gone" />
</LinearLayout>

#step-2 MainActivity.java code
package com.example.esp32wifiapp;

import android.content.SharedPreferences;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class MainActivity extends AppCompatActivity {

    private TextView currentIpLabel;
    private EditText ipInput;
    private Button setIpButton, saveIpButton, ledOnButton, ledOffButton;
    private String esp32Ip; // Store ESP32 IP here
    private SharedPreferences sharedPreferences;
    private static final String PREFS_NAME = "ESP32AppPrefs";
    private static final String KEY_IP = "esp32Ip";
    private static final String DEFAULT_IP = "192.168.1.151"; // Default IP address

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Initialize UI components
        currentIpLabel = findViewById(R.id.current_ip_label);
        ipInput = findViewById(R.id.ip_input);
        setIpButton = findViewById(R.id.set_ip_button);
        saveIpButton = findViewById(R.id.save_ip_button);
        ledOnButton = findViewById(R.id.led_on_button);
        ledOffButton = findViewById(R.id.led_off_button);

        // Initialize SharedPreferences
        sharedPreferences = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);

        // Load the saved IP address or set default if not available
        esp32Ip = sharedPreferences.getString(KEY_IP, DEFAULT_IP);
        currentIpLabel.setText("Current IP: " + esp32Ip);

        // Show IP input field when Set IP button is clicked
        setIpButton.setOnClickListener(v -> {
            ipInput.setVisibility(View.VISIBLE);
            saveIpButton.setVisibility(View.VISIBLE);
        });

        // Save the entered IP address for the ESP32
        saveIpButton.setOnClickListener(v -> {
            esp32Ip = ipInput.getText().toString().trim();
            if (!esp32Ip.isEmpty()) {
                currentIpLabel.setText("Current IP: " + esp32Ip);
                ipInput.setVisibility(View.GONE);
                saveIpButton.setVisibility(View.GONE);

                // Save IP to SharedPreferences
                sharedPreferences.edit().putString(KEY_IP, esp32Ip).apply();
            } else {
                ipInput.setError("Please enter a valid IP");
            }
        });

        // Send command to turn on the LED
        ledOnButton.setOnClickListener(v -> {
            if (!esp32Ip.isEmpty()) {
                sendHttpRequest(esp32Ip + "/on");
            } else {
                Toast.makeText(this, "Set the IP address first", Toast.LENGTH_SHORT).show();
            }
        });

        // Send command to turn off the LED
        ledOffButton.setOnClickListener(v -> {
            if (!esp32Ip.isEmpty()) {
                sendHttpRequest(esp32Ip + "/off");
            } else {
                Toast.makeText(this, "Set the IP address first", Toast.LENGTH_SHORT).show();
            }
        });
    }

    // Method to send HTTP GET requests
    private void sendHttpRequest(String urlString) {
        new AsyncTask<String, Void, String>() {
            @Override
            protected String doInBackground(String... urls) {
                String response = "";
                try {
                    URL url = new URL("http://" + urls[0]);
                    HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                    connection.setRequestMethod("GET");
                    BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                    String inputLine;
                    StringBuilder content = new StringBuilder();
                    while ((inputLine = in.readLine()) != null) {
                        content.append(inputLine);
                    }
                    in.close();
                    response = content.toString();
                } catch (Exception e) {
                    e.printStackTrace();
                }
                return response;
            }

            @Override
            protected void onPostExecute(String result) {
                Toast.makeText(MainActivity.this, "Response: " + result, Toast.LENGTH_SHORT).show();
            }
        }.execute(urlString);
    }
}

